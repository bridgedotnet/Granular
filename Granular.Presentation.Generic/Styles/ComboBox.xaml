<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:theme="clr-namespace:Granular.Presentation.Generic">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Granular.Presentation.Generic;component/Styles/Colors.xaml"/>
        <ResourceDictionary Source="/Granular.Presentation.Generic;component/Styles/Focus.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" Grid.Column="0" Grid.ColumnSpan="2"/>
            <Border x:Name="Chrome" Grid.Column="1" Width="13">
                <Path x:Name="ArrowDownPath" Data="M2.5,0L8.5,0 5.5,3z" Fill="Black" VerticalAlignment="Center"/>
            </Border>
        </Grid>
    </ControlTemplate>


    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>

                        <ToggleButton x:Name="ToggleButton"
                                      Grid.Column="2"
                                      Focusable="False"
                                      ClickMode="Press"
                                      BorderThickness="1"
                                      BorderBrush="Transparent"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      IsChecked="{Binding (ComboBox.IsDropDownOpen), RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"/>

                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectedItem}" 
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left">
                        </ContentPresenter>

                        <TextBox x:Name="PART_EditableTextBox"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Bottom"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="Transparent"
                                 Visibility="Collapsed"
                                 IsReadOnly="{TemplateBinding Control.IsReadOnly}" />
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=ToggleButton}"
                               IsOpen="{Binding (ComboBox.IsDropDownOpen), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               Focusable="False">
                            <Grid x:Name="DropDown"
                                  MinWidth="{TemplateBinding Control.ActualWidth}"
                                  MaxHeight="{TemplateBinding Control.MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" 
                                        BorderThickness="1"
                                        BorderBrush="Black"
                                        Background="White">
                                </Border>
                                <ScrollViewer Margin="4,6,4,6"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderFocusedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource MarginlessDefaultFocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </Border>
                </ControlTemplate>
                <!--<ControlTemplate.Triggers>
                    <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                        <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource SelectionBackgroundBrush}"/>
                        <Setter Property="Control.Foreground" Value="{StaticResource SelectionForegroundBrush}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="ComboBoxItem.IsSelected" Value="True"/>
                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource InactiveSelectionBackgroundBrush}"/>
                        <Setter Property="Control.Foreground" Value="{StaticResource InactiveSelectionForegroundBrush}"/>
                    </MultiTrigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>-->
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>